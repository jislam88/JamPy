versions pytest-8.3.5, python-3.13.2.final.0
invocation_dir=C:\Users\Jamil\Desktop\Jam\SauceDemo
cwd=C:\Users\Jamil\Desktop\Jam\SauceDemo
args=('test_ClaudeSauceDemo.py', '--headed', '--slowmo', '500', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001F51822DD30>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001F51822DD30>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001F5183E1010>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001F51AB20830>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
    early skip of rewriting module: rlcompleter [assertion]
    early skip of rewriting module: readline [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
          plugin_name: 2152182001888
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001F51822DD30>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_base_url\\plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x000001F51AB201A0>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x000001F51A741E50>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001F5183E1010>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001F51AB20830>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001F51AB21BE0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001F51AB22120>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
          plugin_name: 2152182001888
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001F51822DD30>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_base_url\\plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright.pytest_playwright' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py'>
          plugin_name: playwright
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x000001F51AB201A0>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<EncodedFile name='<tempfile._TemporaryFileWrapper object at 0x000001F51A741E50>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001F5183E1010>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001F51AB20830>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001F51AB21BE0>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001F51AB22120>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001F51AB22A50>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x000001F5180B30E0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001F51822DD30>
          start_path: C:\Users\Jamil\Desktop\Jam\SauceDemo
          startdir: C:\Users\Jamil\Desktop\Jam\SauceDemo
      early skip of rewriting module: importlib.metadata._adapters [assertion]
      early skip of rewriting module: email.message [assertion]
      early skip of rewriting module: quopri [assertion]
      early skip of rewriting module: email.utils [assertion]
      early skip of rewriting module: email._parseaddr [assertion]
      early skip of rewriting module: email.errors [assertion]
      early skip of rewriting module: email._policybase [assertion]
      early skip of rewriting module: email.header [assertion]
      early skip of rewriting module: email.quoprimime [assertion]
      early skip of rewriting module: email.base64mime [assertion]
      early skip of rewriting module: email.charset [assertion]
      early skip of rewriting module: email.encoders [assertion]
      early skip of rewriting module: email._encoded_words [assertion]
      early skip of rewriting module: email.iterators [assertion]
      early skip of rewriting module: importlib.metadata._text [assertion]
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: C:\\Users\\Jamil\\Desktop\\Jam\\SauceDemo', 'plugins: base-url-2.1.0, playwright-0.7.0'], ['using: pytest-8.3.5', 'registered third-party plugins:', '  pytest-base-url-2.1.0 at C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_base_url\\plugin.py', '  pytest-playwright-0.7.0 at C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_playwright\\pytest_playwright.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['test_ClaudeSauceDemo.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=WindowsPath('C:/Users/Jamil/Desktop/Jam/SauceDemo/test_ClaudeSauceDemo.py'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: C:\Users\Jamil\Desktop\Jam\SauceDemo
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir SauceDemo> [hook]
            pytest_collectstart [hook]
                collector: <Dir SauceDemo>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir SauceDemo>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.git
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.github
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.github
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.pytest_cache
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.vscode
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\.vscode
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\README.md
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\README.md
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\__pycache__
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\__pycache__
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\coursera.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\coursera.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\coursera.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\coursera.py
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\ddd
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\ddd
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\ddd
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\ddd
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\downloads
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\downloads
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\downloads
                  parent: <Dir SauceDemo>
              finish pytest_collect_directory --> <Dir downloads> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\example.csv
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\example.csv
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\example.csv
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\example.csv
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\objects
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\objects
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\objects
                  parent: <Dir SauceDemo>
              finish pytest_collect_directory --> <Package objects> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\pytestdebug.log
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\pytestdebug.log
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\screenshots
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\screenshots
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\screenshots
                  parent: <Dir SauceDemo>
              finish pytest_collect_directory --> <Dir screenshots> [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceDemo.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceDemo.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceDemo.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceDemo.py
                finish pytest_pycollect_makemodule --> <Module test_ClaudeSauceDemo.py> [hook]
              finish pytest_collect_file --> [<Module test_ClaudeSauceDemo.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceLint.py
                finish pytest_pycollect_makemodule --> <Module test_ClaudeSauceLint.py> [hook]
              finish pytest_collect_file --> [<Module test_ClaudeSauceLint.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_Playpy.py
                finish pytest_pycollect_makemodule --> <Module test_Playpy.py> [hook]
              finish pytest_collect_file --> [<Module test_Playpy.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_SauceDemo.py
                finish pytest_pycollect_makemodule --> <Module test_SauceDemo.py> [hook]
              finish pytest_collect_file --> [<Module test_SauceDemo.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_random.py
                finish pytest_pycollect_makemodule --> <Module test_random.py> [hook]
              finish pytest_collect_file --> [<Module test_random.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir SauceDemo>
                  file_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
                pytest_pycollect_makemodule [hook]
                    parent: <Dir SauceDemo>
                    module_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
                    path: C:\Users\Jamil\Desktop\Jam\SauceDemo\test_solution.py
                finish pytest_pycollect_makemodule --> <Module test_solution.py> [hook]
              finish pytest_collect_file --> [<Module test_solution.py>] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\testvideos
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\testvideos
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\testvideos
                  parent: <Dir SauceDemo>
              finish pytest_collect_directory --> <Dir testvideos> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x000001F51822DD30>
                  collection_path: C:\Users\Jamil\Desktop\Jam\SauceDemo\videos
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\videos
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: C:\Users\Jamil\Desktop\Jam\SauceDemo\videos
                  parent: <Dir SauceDemo>
              finish pytest_collect_directory --> <Dir videos> [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=11 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_ClaudeSauceDemo.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_ClaudeSauceDemo.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_ClaudeSauceDemo.py>
      find_module called for: test_ClaudeSauceDemo [assertion]
      matched test file (was specified on cmdline): 'C:\\Users\\Jamil\\Desktop\\Jam\\SauceDemo\\test_ClaudeSauceDemo.py' [assertion]
      found cached rewritten pyc for C:\Users\Jamil\Desktop\Jam\SauceDemo\test_ClaudeSauceDemo.py [assertion]
      early skip of rewriting module: objects [assertion]
      early skip of rewriting module: objects.Stuff [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: os
            obj: <module 'os' (frozen)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: pytest
            obj: <module 'pytest' from 'C:\\Users\\Jamil\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: Page
            obj: <class 'playwright.sync_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: expect
            obj: <playwright.sync_api.Expect object at 0x000001F5182DE660>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: Browser
            obj: <class 'playwright.sync_api._generated.Browser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: LoginPage
            obj: <class 'test_ClaudeSauceDemo.LoginPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: InventoryPage
            obj: <class 'test_ClaudeSauceDemo.InventoryPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: CartPage
            obj: <class 'test_ClaudeSauceDemo.CartPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: CheckoutInfoPage
            obj: <class 'test_ClaudeSauceDemo.CheckoutInfoPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: CheckoutOverviewPage
            obj: <class 'test_ClaudeSauceDemo.CheckoutOverviewPage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: CheckoutCompletePage
            obj: <class 'test_ClaudeSauceDemo.CheckoutCompletePage'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: TestData
            obj: <class 'test_ClaudeSauceDemo.TestData'>
        finish pytest_pycollect_makeitem --> <Class TestData> [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: ScreenshotHelper
            obj: <class 'test_ClaudeSauceDemo.ScreenshotHelper'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: login_page
            obj: <function login_page at 0x000001F51AC04680>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: logged_in_page
            obj: <function logged_in_page at 0x000001F51AC047C0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: pytest_runtest_makereport
            obj: <function pytest_runtest_makereport at 0x000001F51AC04900>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: test_complete_purchase_with_multiple_items
            obj: <function test_complete_purchase_with_multiple_items at 0x000001F51AC04860>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001F51ABAD940>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x000001F51822DD30>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_complete_purchase_with_multiple_items[chromium]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_ClaudeSauceDemo.py>
            name: test_purchase_with_form_validation
            obj: <function test_purchase_with_form_validation at 0x000001F51AC049A0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001F51AB79F90>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x000001F51822DD30>
                val: chromium
                argname: browser_name
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_purchase_with_form_validation[chromium]>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_ClaudeSauceDemo.py' lenresult=3 outcome='passed'> [hook]
    genitems <Class TestData> [collection]
      pytest_collectstart [hook]
          collector: <Class TestData>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Class TestData>
        pytest_pycollect_makeitem [hook]
            collector: <Class TestData>
            name: USERS
            obj: {'standard': {'username': 'standard_user', 'password': 'secret_sauce'}}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestData>
            name: CUSTOMER_INFO
            obj: {'customer1': {'firstName': 'QAQ', 'lastName': 'AAQA', 'postalCode': '22123'}, 'customer2': {'firstName': 'Orange', 'lastName': 'Name', 'postalCode': '332211'}}
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Class TestData>
            name: PRODUCTS
            obj: {'backpack': 'sauce-labs-backpack', 'bike_light': 'sauce-labs-bike-light', 'bolt_shirt': 'sauce-labs-bolt-t-shirt', 'fleece_jacket': 'sauce-labs-fleece-jacket', 'onesie': 'sauce-labs-onesie', 'red_shirt': 'test.allthethings()-t-shirt-(red)'}
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_ClaudeSauceDemo.py::TestData' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_ClaudeSauceDemo.py::TestData' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Function test_complete_purchase_with_multiple_items[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_complete_purchase_with_multiple_items[chromium]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_purchase_with_form_validation[chromium]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_purchase_with_form_validation[chromium]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_ClaudeSauceDemo.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001F51822DD30>
          items: [<Function test_complete_purchase_with_multiple_items[chromium]>, <Function test_purchase_with_form_validation[chromium]>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001F51822DD30>
            items: [<Function test_complete_purchase_with_multiple_items[chromium]>, <Function test_purchase_with_form_validation[chromium]>]
            start_path: C:\Users\Jamil\Desktop\Jam\SauceDemo
            startdir: C:\Users\Jamil\Desktop\Jam\SauceDemo
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=2>
      pytest_runtest_protocol [hook]
          item: <Function test_complete_purchase_with_multiple_items[chromium]>
          nextitem: <Function test_purchase_with_form_validation[chromium]>
        pytest_runtest_logstart [hook]
            nodeid: test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]
            location: ('test_ClaudeSauceDemo.py', 200, 'test_complete_purchase_with_multiple_items[chromium]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup -->  [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <_pytest.config.Config object at 0x000001F51822DD30> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> [hook]
              headless: False
              slow_mo: 500
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='playwright' scope='session' baseid=''>
              request: <SubRequest 'playwright' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <playwright._impl._playwright.Playwright object at 0x000001F51ABAF620> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_name' scope='session' baseid=''>
              request: <SubRequest 'browser_name' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> chromium [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <BrowserType name=chromium executable_path=C:\Users\Jamil\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='connect_options' scope='session' baseid=''>
              request: <SubRequest 'connect_options' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <function launch_browser.<locals>.launch at 0x000001F51AC31BC0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <Browser type=<BrowserType name=chromium executable_path=C:\Users\Jamil\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe> version=134.0.6998.35> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_pw_artifacts_folder' scope='session' baseid=''>
              request: <SubRequest '_pw_artifacts_folder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <TemporaryDirectory 'C:\\Users\\Jamil\\AppData\\Local\\Temp\\playwright-pytest-dldbaf98'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> C:\Users\Jamil\Desktop\Jam\SauceDemo\test-results\test-claudesaucedemo-py-test-complete-purchase-with-multiple-items-chromium [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <pytest_playwright.pytest_playwright.ArtifactsRecorder object at 0x000001F51AF301A0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <function new_context.<locals>._new_context at 0x000001F51AC31C60> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=C:\Users\Jamil\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe> version=134.0.6998.35>> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <Page url='about:blank'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_setup --> <test_ClaudeSauceDemo.LoginPage object at 0x000001F51AF31400> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001F51822DD30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_complete_purchase_with_multiple_items[chromium]>
        pytest_runtest_makereport [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
            call: <CallInfo when='call' excinfo=<ExceptionInfo TargetClosedError('Page.screenshot: Target page, context or browser has been closed') tblen=41>>
        finish pytest_runtest_makereport --> <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001F51822DD30>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_complete_purchase_with_multiple_items[chromium]>
            call: <CallInfo when='call' excinfo=<ExceptionInfo TargetClosedError('Page.screenshot: Target page, context or browser has been closed') tblen=41>>
            report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
            nextitem: <Function test_purchase_with_form_validation[chromium]>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_complete_purchase_with_multiple_items[chromium]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001F51822DD30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]
            location: ('test_ClaudeSauceDemo.py', 200, 'test_complete_purchase_with_multiple_items[chromium]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_purchase_with_form_validation[chromium]>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]
            location: ('test_ClaudeSauceDemo.py', 248, 'test_purchase_with_form_validation[chromium]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_purchase_with_form_validation[chromium]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> C:\Users\Jamil\Desktop\Jam\SauceDemo\test-results\test-claudesaucedemo-py-test-purchase-with-form-validation-chromium [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> <pytest_playwright.pytest_playwright.ArtifactsRecorder object at 0x000001F51AB78CD0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> <function new_context.<locals>._new_context at 0x000001F51AFAC9A0> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> <BrowserContext browser=<Browser type=<BrowserType name=chromium executable_path=C:\Users\Jamil\AppData\Local\ms-playwright\chromium-1161\chrome-win\chrome.exe> version=134.0.6998.35>> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> <Page url='about:blank'> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_setup --> <test_ClaudeSauceDemo.LoginPage object at 0x000001F51AFEE490> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='logged_in_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'logged_in_page' for <Function test_purchase_with_form_validation[chromium]>>
        pytest_runtest_makereport [hook]
            item: <Function test_purchase_with_form_validation[chromium]>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo TargetClosedError('Locator.fill: Target page, context or browser has been closed') tblen=48>>
        finish pytest_runtest_makereport --> <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001F51822DD30>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_purchase_with_form_validation[chromium]>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo TargetClosedError('Locator.fill: Target page, context or browser has been closed') tblen=48>>
            report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_purchase_with_form_validation[chromium]>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='logged_in_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'logged_in_page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='logged_in_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'logged_in_page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='login_page' scope='function' baseid='test_ClaudeSauceDemo.py'>
              request: <SubRequest 'login_page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid=''>
              request: <SubRequest 'page' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='context' scope='function' baseid=''>
              request: <SubRequest 'context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_pw_artifacts_folder' scope='session' baseid=''>
              request: <SubRequest '_pw_artifacts_folder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='new_context' scope='function' baseid=''>
              request: <SubRequest 'new_context' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid=''>
              request: <SubRequest 'browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='connect_options' scope='session' baseid=''>
              request: <SubRequest 'connect_options' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_name' scope='session' baseid=''>
              request: <SubRequest 'browser_name' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type' scope='session' baseid=''>
              request: <SubRequest 'browser_type' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='playwright' scope='session' baseid=''>
              request: <SubRequest 'playwright' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='launch_browser' scope='session' baseid=''>
              request: <SubRequest 'launch_browser' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_purchase_with_form_validation[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_artifacts_recorder' scope='function' baseid=''>
              request: <SubRequest '_artifacts_recorder' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='output_path' scope='function' baseid=''>
              request: <SubRequest 'output_path' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='device' scope='session' baseid=''>
              request: <SubRequest 'device' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_type_launch_args' scope='session' baseid=''>
              request: <SubRequest 'browser_type_launch_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser_context_args' scope='session' baseid=''>
              request: <SubRequest 'browser_context_args' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Function test_complete_purchase_with_multiple_items[chromium]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_purchase_with_form_validation[chromium]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001F51822DD30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]
            location: ('test_ClaudeSauceDemo.py', 248, 'test_purchase_with_form_validation[chromium]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=2 testscollected=2>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001F51AB21BE0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x000001F51822DD30>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_complete_purchase_with_multiple_items[chromium]' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001F51822DD30>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_ClaudeSauceDemo.py::test_purchase_with_form_validation[chromium]' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001F51822DD30>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001F51822DD30>
    finish pytest_unconfigure --> [] [hook]
